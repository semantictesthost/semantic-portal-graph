{
  "fakeNode_1": "    <div class=\"summary-parent\">\n    <a href=\"http://semantic-portal.net/concept:2623\">\n        &larr; Functions    </a>\n    </div>\n\n<h3>\n    <a href=\"http://semantic-portal.net/concept:2630\" target=\"_blank\">\n    main()    </a>\n</h3>\n\n\n<div class=\"concept-thesises\">\n            <div>\n            <pre><code>void main() { \n   querySelector('#sample_text_id') \n   ..text = 'Click me!' \n   ..onClick.listen(reverseText); \n}</code><a class=\"link-to-view\"\n   href=\"http://semantic-portal.net/dart-tour-functions\" ><i class=\"fa fa-link\"></i></a></pre><div class=\"related-thesises\">\n        <div>\n                    main() <strong class='concept'><a href='http://semantic-portal.net/concept:2623' title=\"Functions\">function</a></strong> for a web app. <a class=\"link-to-view\"\n   href=\"http://semantic-portal.net/dart-tour-functions\" ><i class=\"fa fa-link\"></i></a>    </div>\n    </div>        </div>\n                <div>\n            <pre><code>// Run the app like this: dart args.dart 1 test \nvoid main(List&lt;String&gt; arguments) { \n   print(arguments); \n   assert(arguments.length == 2); \n   assert(int.parse(arguments[0]) == 1); \n   assert(arguments[1] == 'test'); \n}</code><a class=\"link-to-view\"\n   href=\"http://semantic-portal.net/dart-tour-functions\" ><i class=\"fa fa-link\"></i></a></pre><div class=\"related-thesises\">\n        <div>\n                    main() <strong class='concept'><a href='http://semantic-portal.net/concept:2623' title=\"Functions\">function</a></strong> for a command-line app that takes arguments. <a class=\"link-to-view\"\n   href=\"http://semantic-portal.net/dart-tour-functions\" ><i class=\"fa fa-link\"></i></a>    </div>\n    </div>        </div>\n    \n        <p>\n        <em>    Every app must have a top-level main() <strong class='concept'><a href='http://semantic-portal.net/concept:2623' title=\"Functions\">function</a></strong>, which serves as the entrypoint to the app. <a class=\"link-to-view\"\n   href=\"http://semantic-portal.net/dart-tour-functions\" ><i class=\"fa fa-link\"></i></a></em>\n    </p>\n        <p>\n        <em>    The main() <strong class='concept'><a href='http://semantic-portal.net/concept:2623' title=\"Functions\">function</a></strong> returns void and has an optional <strong class='concept'><a href='http://semantic-portal.net/concept:2620' title=\"List\">List</a></strong>&lt;<strong class='concept'><a href='http://semantic-portal.net/concept:2617' title=\"String\">String</a></strong>&gt; parameter for arguments. <a class=\"link-to-view\"\n   href=\"http://semantic-portal.net/dart-tour-functions\" ><i class=\"fa fa-link\"></i></a></em>\n    </p>\n    </div>\n\n",
  "fakeNode_2": "    <div class=\"summary-parent\">\n    <a href=\"http://semantic-portal.net/concept:2119\">\n        &larr; Angular    </a>\n    </div>\n\n<h3>\n    <a href=\"http://semantic-portal.net/concept:2050\" target=\"_blank\">\n    Component    </a>\n</h3>\n\n\n<div class=\"concept-thesises\">\n\n    <ul>\n        <li>\n        <em>    A component controls a patch of screen called a view. <a class=\"link-to-view\"\n   href=\"http://semantic-portal.net/architecture-components\" ><i class=\"fa fa-link\"></i></a></em>\n    </li>\n        <li>\n        <em>    Decorator that marks a class as an <strong class='concept'><a href='http://semantic-portal.net/concept:2119' title=\"Angular\">Angular</a></strong> component and provides configuration metadata that determines how the component should be processed, instantiated, and used at runtime. <a class=\"link-to-view\"\n   href=\"http://semantic-portal.net/architecture-services\" ><i class=\"fa fa-link\"></i></a></em>\n    </li>\n        <li>\n        <em>    <strong class='concept'><a href='http://semantic-portal.net/concept:2119' title=\"Angular\">Angular</a></strong> components are a subset of directives, always associated with a template. Unlike other directives, only one component can be instantiated per an element in a template. <a class=\"link-to-view\"\n   href=\"http://semantic-portal.net/architecture-services\" ><i class=\"fa fa-link\"></i></a></em>\n    </li>\n        </ul>\n\n            <div>\n            <pre><code>@Component({\n  selector: 'app-bank-account',\n  inputs: ['bankName', 'id: account-id'],\n  template: `\n    Bank Name: {{ bankName }}\n    Account Id: {{ id }}\n  `\n})\nexport class BankAccountComponent {\n  bankName: string|null = null;\n  id: string|null = null;\n\n  // this property is not bound, and won't be automatically updated by Angular\n  normalizedBankName: string|null = null;\n}\n\n@Component({\n  selector: 'app-my-input',\n  template: `\n    &lt;app-bank-account\n      bankName=&quot;RBC&quot;\n      account-id=&quot;4747&quot;&gt;\n    &lt;/app-bank-account&gt;\n  `\n})\nexport class MyInputComponent {\n}</code></pre>        </div>\n    </div>\n\n<p class=\"summary-more-concepts\">\n                        <a href=\"http://semantic-portal.net/concept:2171\">Output</a>\n                    <a href=\"http://semantic-portal.net/concept:2173\">Input</a>\n                    <a href=\"http://semantic-portal.net/concept:2174\">NgElement</a>\n    </p>\n",
  "fakeNode_3": "    <div class=\"summary-parent\">\n    <a href=\"http://semantic-portal.net/concept:2119\">\n        &larr; Angular    </a>\n    </div>\n\n<h3>\n    <a href=\"http://semantic-portal.net/concept:2111\" target=\"_blank\">\n    Forms    </a>\n</h3>\n\n\n<div class=\"concept-thesises\">\n\n        <p>\n        <em>    Use forms to enable users to log in, to update a profile, to enter sensitive information, and to perform many other data-entry tasks. <a class=\"link-to-view\"\n   href=\"http://semantic-portal.net/forms-introduction\" ><i class=\"fa fa-link\"></i></a></em>\n    </p>\n    </div>\n\n<p class=\"summary-more-concepts\">\n                        <a href=\"http://semantic-portal.net/concept:2117\">ControlValueAccessor</a>\n                    <a href=\"http://semantic-portal.net/concept:2116\">FormArray</a>\n                    <a href=\"http://semantic-portal.net/concept:2115\">FormGroup</a>\n                    <a href=\"http://semantic-portal.net/concept:2112\">Reactive forms</a>\n                    <a href=\"http://semantic-portal.net/concept:2114\">FormControl</a>\n                    <a href=\"http://semantic-portal.net/concept:2113\">Template-driven forms</a>\n                    <a href=\"http://semantic-portal.net/concept:2146\">AbstractControl</a>\n                    <a href=\"http://semantic-portal.net/concept:2147\">FormBuilder</a>\n                    <a href=\"http://semantic-portal.net/concept:2148\">FormControlDirective</a>\n                    <a href=\"http://semantic-portal.net/concept:2149\">FormControlName</a>\n                    <a href=\"http://semantic-portal.net/concept:2150\">FormGroupDirective</a>\n                    <a href=\"http://semantic-portal.net/concept:2151\">FormGroupName</a>\n                    <a href=\"http://semantic-portal.net/concept:2152\">FormArrayName</a>\n                    <a href=\"http://semantic-portal.net/concept:2153\">NgForm</a>\n                    <a href=\"http://semantic-portal.net/concept:2159\">Form Validation</a>\n                    <a href=\"http://semantic-portal.net/concept:2118\">Form model</a>\n    </p>\n",
  "fakeNode_4": "    <div class=\"summary-parent\">\n    <a href=\"http://semantic-portal.net/concept:2111\">\n        &larr; Forms    </a>\n    </div>\n\n<h3>\n    <a href=\"http://semantic-portal.net/concept:2112\" target=\"_blank\">\n    Reactive forms    </a>\n</h3>\n\n\n<div class=\"concept-thesises\">\n\n    <ul>\n        <li>\n        <em>    Reactive <strong class='concept'><a href='http://semantic-portal.net/concept:2111' title=\"Forms\">forms</a></strong> define custom validators as functions that receive a control to validate. <a class=\"link-to-view\"\n   href=\"http://semantic-portal.net/forms-introduction\" ><i class=\"fa fa-link\"></i></a></em>\n    </li>\n        <li>\n        <em>    Reactive <strong class='concept'><a href='http://semantic-portal.net/concept:2111' title=\"Forms\">forms</a></strong> provide a relatively easy testing strategy because they provide synchronous access to the form and data models, and they can be tested without rendering the UI. <a class=\"link-to-view\"\n   href=\"http://semantic-portal.net/forms-introduction\" ><i class=\"fa fa-link\"></i></a></em>\n    </li>\n        <li>\n        <em>    Reactive forms provide access to low-level APIs and synchronous access to the <strong class='concept'><a href='http://semantic-portal.net/concept:2118' title=\"Form model\">form model</a></strong>, making creating large-scale <strong class='concept'><a href='http://semantic-portal.net/concept:2111' title=\"Forms\">forms</a></strong> easier. <a class=\"link-to-view\"\n   href=\"http://semantic-portal.net/forms-introduction\" ><i class=\"fa fa-link\"></i></a></em>\n    </li>\n        <li>\n        <em>    Reactive forms keep the data model pure by providing it as an immutable data structure. <a class=\"link-to-view\"\n   href=\"http://semantic-portal.net/forms-introduction\" ><i class=\"fa fa-link\"></i></a></em>\n    </li>\n        <li>\n        <em>    Reactive <strong class='concept'><a href='http://semantic-portal.net/concept:2111' title=\"Forms\">forms</a></strong> provide a model-driven approach to handling form inputs whose values change over time. <a class=\"link-to-view\"\n   href=\"http://semantic-portal.net/forms-reactive-forms\" ><i class=\"fa fa-link\"></i></a></em>\n    </li>\n        </ul>\n\n<div class=\"concept-instances\">\n    <h4>Reactive forms:</h4>\n    <ul>\n<li>\n    <a href=\"http://semantic-portal.net/concept:2144\">\n    Displaying a form control value    </a>\n</li>\n\n<li>\n    <a href=\"http://semantic-portal.net/concept:2145\">\n    Ways to update the model value    </a>\n</li>\n\n    </ul>\n</div></div>\n\n",
  "fakeNode_5": "    <div class=\"summary-parent\">\n    <a href=\"http://semantic-portal.net/concept:2119\">\n        &larr; Angular    </a>\n    </div>\n\n<h3>\n    <a href=\"http://semantic-portal.net/concept:2166\" target=\"_blank\">\n    HttpModule    </a>\n</h3>\n\n\n<div class=\"concept-thesises\">\n</div>\n\n<p class=\"summary-more-concepts\">\n                        <a href=\"http://semantic-portal.net/concept:2136\">HttpHandler</a>\n                    <a href=\"http://semantic-portal.net/concept:2137\">HttpRequest</a>\n                    <a href=\"http://semantic-portal.net/concept:2133\">HttpHeaders</a>\n                    <a href=\"http://semantic-portal.net/concept:2132\">HttpErrorResponse</a>\n                    <a href=\"http://semantic-portal.net/concept:2131\">HttpResponse</a>\n                    <a href=\"http://semantic-portal.net/concept:2129\">HttpClientModule</a>\n                    <a href=\"http://semantic-portal.net/concept:2134\">HttpEvent</a>\n                    <a href=\"http://semantic-portal.net/concept:2135\">HttpInterceptor</a>\n                    <a href=\"http://semantic-portal.net/concept:2138\">HTTP_INTERCEPTORS</a>\n                    <a href=\"http://semantic-portal.net/concept:2139\">HttpParams</a>\n                    <a href=\"http://semantic-portal.net/concept:2140\">HttpClientTestingModule</a>\n                    <a href=\"http://semantic-portal.net/concept:2141\">HttpTestingController</a>\n                    <a href=\"http://semantic-portal.net/concept:2048\">HttpClient</a>\n    </p>\n",
  "fakeNode_6": "    <div class=\"summary-parent\">\n    <a href=\"http://semantic-portal.net/concept:2166\">\n        &larr; HttpModule    </a>\n    </div>\n\n<h3>\n    <a href=\"http://semantic-portal.net/concept:2048\" target=\"_blank\">\n    HttpClient    </a>\n</h3>\n\n\n<div class=\"concept-thesises\">\n<p><code>HttpClient class</code></p>\n\n        <p>\n        <em>    Performs HTTP requests. This <strong class='concept'><a href='http://semantic-portal.net/concept:2047' title=\"Service\">service</a></strong> is available as an <strong class='concept'><a href='http://semantic-portal.net/concept:2049' title=\"Injectable\">injectable</a></strong> class, with methods to perform HTTP requests. Each request method has multiple signatures, and the return type varies based on the signature that is called (mainly the values of observe and responseType). <a class=\"link-to-view\"\n   href=\"http://semantic-portal.net/architecture-services\" ><i class=\"fa fa-link\"></i></a></em>\n    </p>\n        <p>\n        <em>    Performs HTTP requests. This <strong class='concept'><a href='http://semantic-portal.net/concept:2047' title=\"Service\">service</a></strong> is available as an <strong class='concept'><a href='http://semantic-portal.net/concept:2049' title=\"Injectable\">injectable</a></strong> class, with methods to perform HTTP requests. Each request method has multiple signatures, and the return type varies based on the signature that is called (mainly the values of observe and responseType). <a class=\"link-to-view\"\n   href=\"http://semantic-portal.net/fundamentals-http\" ><i class=\"fa fa-link\"></i></a></em>\n    </p>\n                <div>\n            HttpClient &rarr; is a  &rarr; <a href=\"http://semantic-portal.net/concept:2047\">Service</a>.        </div>\n                <div>\n            <blockquote class=\"thesis-note\">\n    <span style=\"font-weight:bold \">Note:</span>\n    <p>Note that the responseType options value is a String that identifies the single data type of the response. A single overload version of the method handles each response type. The value of responseType cannot be a union, as the combined signature could imply.</p>\n</blockquote>        </div>\n    </div>\n\n<p class=\"summary-more-concepts\">\n                        <a href=\"http://semantic-portal.net/concept:2142\">HttpClient.get()</a>\n    </p>\n"
}
